#!/usr/bin/env python3
"""
Mermaid with Links Generator - Create interactive Mermaid flowcharts

This script generates Mermaid flowchart syntax with clickable links
back to specific documentation sections.
"""

import re
from datetime import datetime

class MermaidGenerator:
    def __init__(self, base_url: str):
        self.base_url = base_url
        self.node_counter = 0

    def sanitize_text(self, text: str, max_length: int = 40) -> str:
        """Sanitize text for use in Mermaid nodes"""
        text = re.sub(r'["\[\]{}()]', '', text)
        if len(text) > max_length:
            text = text[:max_length - 3] + '...'
        return text.strip()

    def generate_node_id(self) -> str:
        """Generate unique node ID"""
        self.node_counter += 1
        return f"N{self.node_counter}"

    def generate_anchor(self, text: str) -> str:
        """Generate anchor link from text"""
        anchor = text.lower()
        anchor = re.sub(r'[^\w\s-]', '', anchor)
        anchor = re.sub(r'[-\s]+', '-', anchor)
        return anchor.strip('-')

    def generate_mermaid_flowchart(self, flow_data: dict) -> str:
        """Generate complete Mermaid flowchart from flow data"""
        steps = flow_data['steps']

        # Generate metadata header
        header = f"""%%{{ Generated by doc-flow-diagram-generator
%% Source: {self.base_url}
%% Generated: {datetime.now().strftime('%Y-%m-%d')}
%%}}

"""

        mermaid = header + "flowchart TD\n"

        # Generate nodes and connections
        prev_node_id = None

        for step in steps:
            node_id = self.generate_node_id()
            sanitized_text = self.sanitize_text(step['text'])

            # Create node definition
            mermaid += f"    {node_id}[{sanitized_text}]\n"

            # Create connection to previous node
            if prev_node_id:
                mermaid += f"    {prev_node_id} --> {node_id}\n"

            # Generate click event
            anchor = self.generate_anchor(step['text'])
            click_url = f"{self.base_url}#{anchor}"
            mermaid += f'    click {node_id} "{click_url}" "Go to: {sanitized_text}"\n'

            prev_node_id = node_id

        return mermaid

def create_sample_flow():
    """Create sample flow data for testing"""
    return {
        "title": "Getting Started Workflow",
        "steps": [
            {"text": "Create a new account"},
            {"text": "Verify your email address"},
            {"text": "Install the CLI tool"},
            {"text": "Configure your credentials"},
            {"text": "Run your first command"}
        ]
    }

if __name__ == "__main__":
    # Demo mode
    generator = MermaidGenerator("https://docs.example.com/getting-started")
    flow_data = create_sample_flow()
    mermaid_code = generator.generate_mermaid_flowchart(flow_data)
    print(mermaid_code)